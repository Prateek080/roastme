openapi: 3.0.3
info:
  title: Photo Roasting API
  description: Anonymous photo roasting web application API
  version: 1.0.0
  contact:
    name: Photo Roasting API
    
servers:
  - url: http://localhost:8000
    description: Local development server
  - url: https://api.photoroast.app
    description: Production server

paths:
  /roast:
    post:
      summary: Generate humorous roast for uploaded photo
      description: |
        Upload a photo and receive a humorous, family-friendly roast generated by AI.
        The photo is processed immediately and deleted after roast generation.
      operationId: generateRoast
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - photo
              properties:
                photo:
                  type: string
                  format: binary
                  description: Photo file to roast (JPEG, PNG, GIF, WebP)
                  example: "[binary image data]"
            encoding:
              photo:
                contentType: image/jpeg, image/png, image/gif, image/webp
      responses:
        '200':
          description: Roast generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoastResponse'
              example:
                success: true
                roast_text: "I see you've uploaded a selfie! That's brave of you - most people wait until they're having a good hair day, but you said 'why wait for a miracle?'"
                processing_time_ms: 3450
                timestamp: "2025-09-18T10:30:00Z"
        '400':
          description: Invalid file upload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
              examples:
                file_too_large:
                  summary: File exceeds 5MB limit
                  value:
                    success: false
                    error_type: "file_size"
                    error_message: "File size exceeds 5MB limit. Please upload a smaller image."
                    max_allowed: "5MB"
                invalid_format:
                  summary: Unsupported file format
                  value:
                    success: false
                    error_type: "file_format"
                    error_message: "Unsupported file format. Please upload JPEG, PNG, GIF, or WebP."
                    allowed_formats: ["image/jpeg", "image/png", "image/gif", "image/webp"]
                corrupted_file:
                  summary: Corrupted or invalid image
                  value:
                    success: false
                    error_type: "file_invalid"
                    error_message: "Unable to process image file. Please ensure it's a valid image."
        '408':
          description: Request timeout (exceeded 10 second limit)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessingErrorResponse'
              example:
                success: false
                error_type: "timeout"
                error_message: "Roast generation timed out. Please try again with a different photo."
                retry_suggested: true
                estimated_retry_delay: 30
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessingErrorResponse'
              example:
                success: false
                error_type: "rate_limit"
                error_message: "Too many requests. Please wait a moment before trying again."
                retry_suggested: true
                estimated_retry_delay: 60
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessingErrorResponse'
              example:
                success: false
                error_type: "service_error"
                error_message: "Unable to generate roast at this time. Please try again later."
                retry_suggested: true
                estimated_retry_delay: 300
        '503':
          description: Service unavailable (OpenAI API down)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessingErrorResponse'
              example:
                success: false
                error_type: "service_unavailable"
                error_message: "Roast generation service is temporarily unavailable. Please try again later."
                retry_suggested: true
                estimated_retry_delay: 600

  /health:
    get:
      summary: Health check endpoint
      description: Check if the API is running and healthy
      operationId: healthCheck
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-09-18T10:30:00Z"
                  version:
                    type: string
                    example: "1.0.0"

components:
  schemas:
    RoastResponse:
      type: object
      required:
        - success
        - processing_time_ms
        - timestamp
      properties:
        success:
          type: boolean
          description: Whether roast generation was successful
          example: true
        roast_text:
          type: string
          description: Generated humorous roast text (only present on success)
          example: "Looking at this photo, I can see why they invented filters!"
          minLength: 10
          maxLength: 500
        processing_time_ms:
          type: integer
          description: Time taken to generate roast in milliseconds
          example: 3450
          minimum: 0
          maximum: 10000
        timestamp:
          type: string
          format: date-time
          description: When the roast was generated
          example: "2025-09-18T10:30:00Z"
        error_message:
          type: string
          description: Error message (only present on failure)
          example: "Unable to analyze image content"

    ValidationErrorResponse:
      type: object
      required:
        - success
        - error_type
        - error_message
      properties:
        success:
          type: boolean
          example: false
          description: Always false for error responses
        error_type:
          type: string
          enum: [file_size, file_format, file_invalid, missing_file]
          description: Type of validation error
          example: "file_size"
        error_message:
          type: string
          description: User-friendly error message
          example: "File size exceeds 5MB limit"
        max_allowed:
          type: string
          description: Maximum allowed value (for size errors)
          example: "5MB"
        allowed_formats:
          type: array
          items:
            type: string
          description: List of allowed file formats (for format errors)
          example: ["image/jpeg", "image/png", "image/gif", "image/webp"]

    ProcessingErrorResponse:
      type: object
      required:
        - success
        - error_type
        - error_message
      properties:
        success:
          type: boolean
          example: false
          description: Always false for error responses
        error_type:
          type: string
          enum: [timeout, api_error, service_unavailable, rate_limit, service_error]
          description: Type of processing error
          example: "timeout"
        error_message:
          type: string
          description: User-friendly error message
          example: "Roast generation timed out"
        retry_suggested:
          type: boolean
          description: Whether retrying the request is recommended
          example: true
        estimated_retry_delay:
          type: integer
          description: Suggested delay before retry in seconds
          example: 30
          minimum: 0
          maximum: 3600

  parameters:
    PhotoFile:
      name: photo
      in: formData
      required: true
      schema:
        type: string
        format: binary
      description: Image file to generate roast for
      
security: []  # No authentication required (anonymous usage)

tags:
  - name: roasting
    description: Photo roasting operations
  - name: health
    description: Service health monitoring
